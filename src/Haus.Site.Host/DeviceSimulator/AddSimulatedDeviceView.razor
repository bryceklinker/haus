@page "/device-simulator/add"

@using Haus.Api.Client.Devices
@using Haus.Api.Client.DeviceSimulator
@using Haus.Core.Models.Common
@using Haus.Core.Models.Devices
@using Haus.Core.Models.DeviceSimulator
@using Haus.Site.Host.Shared.Metadata

@attribute [Authorize]

@inject IDeviceApiClient DeviceClient
@inject IDeviceSimulatorApiClient SimulatorClient;

<MudPopoverProvider />

<LoadingContentView IsLoading="IsLoading" LoadingText="Loading Device Types...">
    <MudPaper>
        <MudForm>
            <MudSelect Required @bind-Value="DeviceType" RequiredError="You must select a device type">
                @foreach (var type in DeviceTypes.Items)
                {
                    <MudSelectItem T="DeviceType?" Value="type"/>
                }
            </MudSelect>
            <MudPaper>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => AddMetadataRow()">
                    Add Metadata
                </MudButton>
            </MudPaper>
            
            <EditableMetadataListView @bind-Items="Metadata" />
        </MudForm>    
    </MudPaper>
    <MudPaper>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="() => HandleSave()">
            Save
        </MudButton>
    </MudPaper>
</LoadingContentView>

@code {
    public bool IsLoading { get; set; }

    public ListResult<DeviceType> DeviceTypes { get; set; } = new();

    public DeviceType? DeviceType { get; set; }

    public MetadataModel[] Metadata { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        DeviceType = null;
        IsLoading = true;
        DeviceTypes = await DeviceClient.GetDeviceTypesAsync();
        IsLoading = false;
    }

    private async Task HandleSave()
    {
        if (DeviceType == null)
        {
            return;
        }

        await SimulatorClient.AddSimulatedDeviceAsync(new SimulatedDeviceModel
        {
            DeviceType = DeviceType.Value,
            Metadata = Metadata.ToArray()
        });
    }

    private void AddMetadataRow()
    {
        Metadata = Metadata.Append(new MetadataModel("", "")).ToArray();
    }
}