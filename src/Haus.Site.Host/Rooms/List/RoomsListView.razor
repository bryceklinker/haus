@page "/rooms/{roomId:long?}"
@using Haus.Api.Client.Rooms
@using Haus.Core.Models.Common
@using Haus.Core.Models.Rooms
@using Haus.Site.Host.Rooms.AddRoom
@using Haus.Site.Host.Rooms.Detail

@attribute [Authorize]

@inject IDialogService DialogService;
@inject IRoomsApiClient RoomsClient;
@inject NavigationManager Navigation;

<LoadingContentView IsLoading="IsLoading" LoadingText="loading rooms...">
    <MudGrid>
        <MudItem xs="3">
            <MudList Style="height: calc(100% - 48px)" T="RoomModel">
                @foreach (var room in Rooms.Items)
                {
                    <MudListItem T="RoomModel"
                                 Text="@room.Name"
                                 OnClick="() => HandleRoomSelected(room)"/>
                }
            </MudList>
            <MudFab Style="align-self: end;" StartIcon="@Icons.Material.Filled.Add" OnClick="HandleAddRoom"/>
        </MudItem>
        <MudItem xs="9">
            @if (SelectedRoom != null)
            {
                <RoomDetailView Room="SelectedRoom"/>
            }
        </MudItem>
    </MudGrid>
</LoadingContentView>

@code {
    [Parameter] public long? RoomId { get; set; }

    private bool IsLoading { get; set; }
    private ListResult<RoomModel> Rooms { get; set; } = new();
    private RoomModel? SelectedRoom { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        Rooms = await RoomsClient.GetRoomsAsync();
        IsLoading = false;
    }

    protected override void OnParametersSet()
    {
        SelectedRoom = RoomId != null
            ? Rooms.Items.SingleOrDefault(r => r.Id == RoomId)
            : null;
    }

    private void HandleRoomSelected(RoomModel room)
    {
        Navigation.NavigateTo($"/rooms/{room.Id}");
    }

    private async Task HandleAddRoom()
    {
        await DialogService.ShowAsync<AddRoomDialogView>();
    }

}